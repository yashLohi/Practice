class StockSpanner {
    
    Stack<int[]> st;
    
    public StockSpanner() {
        st = new Stack<>();
    }
    
    public int next(int price) {
        
        int span = 1;
        
        while(st.size() > 0 && price >= st.peek()[0]){
            span += st.pop()[1];
        }
        
        st.push(new int[]{price, span});
        
        return span;
    }
}
---------------------------------------------
class StockSpanner {
public:
    stack<pair<int,int>>st;
    StockSpanner() {
        
    }
    
    int next(int price) {
     if(st.empty())
     {
         st.push({price,1});
         return 1;
     }
     else
     {
         int ans = 1;
         while(!st.empty() && st.top().first<=price)
         {
             auto x = st.top();
             st.pop();
             int first = x.first;
             int second = x.second;
             ans+=second;
         }
         st.push({price,ans});
         return ans;
     }
        return 0;
    }
};
