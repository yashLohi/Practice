

// User function Template for Java

class Solution {

    static String BalancedString(int n) {

        int i=0;

        int j=25;

        StringBuffer ans=new StringBuffer();

        int z=n/26;

        for(i=0;i<z;i++)

        {

            ans.append("abcdefghijklmnopqrstuvwxyz");

        }

        i=0;

        

        if(n%2==0)

        {

           n=n%26;

           for(i=0;i<n/2;i++)

           {

               ans.append((char)(i+'a'));

           }

            for(j=26-(n/2);j<=25;j++)

            {

                ans.append((char)(j+'a'));

            }

        }

        else

        {

            int sum=0;

            int temp=n;

            n=n%26;

            while(temp>0)

            {

                sum=sum+(temp%10);

                temp=temp/10;

            }

            if(sum%2==0)

            {

                 for(i=0;i<(n+1)/2;i++)

                ans.append((char)(i+'a'));

                for(j=26-((n-1)/2);j<=25;j++)

                 ans.append((char)(j+'a'));

            }

            else

            {

                for(i=0;i<(n-1)/2;i++)

                ans.append((char)(i+'a'));

                for(j=26-(n+1)/2;j<=25;j++)

                 ans.append((char)(j+'a'));

            }

        }

        return ans.toString();

    }

}

// User function Template for Java

class Solution {
    static String BalancedString(int N) {

       String alpha = "abcdefghijklmnopqrstuvwxyz";

       int times  = N/26;

       int mod    = N%26;

       StringBuilder str = new StringBuilder();

       for(int i = 0; i < times; i++){

           str.append(alpha);

       }

       int num = N;

       int sum = 0;

       

       int start = -1;

       int end = -1;

       if(mod != 0){

            if(N % 2 == 0){

               start = mod/2;

               end= mod/2;

            }else{

                while(num > 0){

                   sum = sum + num%10;

                   num = num/10;

                }

                if(sum % 2 == 0){

                    start = (mod+1)/2;

                    end = (mod-1)/2;

                }else{

                    start = (mod-1)/2;

                    end = (mod+1)/2;

                }  

            }

             

       }

      // System.out.println(start+" "+end);

       if(start != -1 && end != -1){

            for(int i = 0 ; i < start;i++){

                str.append(alpha.charAt(i));

            } 

            int st = 26 - (end+1);

            while(++st < 26){

                str.append(alpha.charAt(st));

            }

       }

       return str.toString();

    }
}

===================================


// User function Template for Java

class Solution {
    static String BalancedString(int N) {
        // code here
         StringBuilder sb = new StringBuilder();
        int val = sum(N);   // store sum of digit of N for future use
        while(N>0) {
            if(N>=26) {
                sb.append(find(26,0));
                N-=26;
            } else {
                if(N%2==0) {
                    sb.append(find(N/2,0));
                    sb.append(find(N/2,1));
                } else {
                    if(val%2==0) {
                        sb.append(find((N+1)/2,0));
                        sb.append(find((N-1)/2,1));
                    } else {
                        sb.append(find((N-1)/2,0));
                        sb.append(find((N+1)/2,1));
                    }
                }
                N=0;
            }
        }
        return sb.toString();
    }
    // find sum of digit of n
    public static int sum(int n) {
        int s=0;
        while(n>0) {
            s+=(n%10);
            n/=10;
        }
        return s;
    }
    // return a string of length v according to status
    // status -> 0 from starting i.e a.......
    // status -> 1 from ending i.e  ........z
    public static String find(int v,int status) {
        StringBuilder sb = new StringBuilder();
        if(status==0) {
            for(char i='a';v>0;v--,i++) {
                sb.append(Character.toString(i));
            }
        } else {
            for(char i='z';v>0;v--,i--) {
                sb.append(Character.toString(i));
            }
            sb.reverse();
        }
        return sb.toString();
    }
}
