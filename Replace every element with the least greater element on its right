class Solution {
    public static ArrayList<Integer> findLeastGreater(int n, int[] arr) {
        // code here
        TreeSet<Integer> set=new TreeSet<>();
        ArrayList<Integer> ans =new ArrayList<>();
        for(int i=n-1;i>=0;i--){
            set.add(arr[i]);
            if(set.higher(arr[i])==null)ans.add(-1);
            else ans.add(set.higher(arr[i]));
        }
        Collections.reverse(ans);
        return ans;
    }
}





class Solution{
    public:
     vector<int> findLeastGreater(vector<int>& arr, int n) {
        set<int>s;
        vector<int>v;
        for(int i=n-1;i>=0;i--){
            s.insert(arr[i]);
            auto it=s.upper_bound(arr[i]);
            if(it==s.end()){
                v.push_back(-1);
            }
            else{
                v.push_back(*it);
            }
        }
        reverse(v.begin(),v.end());
        return v;
    }
};
Footer
